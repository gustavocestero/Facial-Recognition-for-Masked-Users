#import and name each classification we will be using
face_cascade = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')
eye_cascade = cv2.CascadeClassifier('haarcascade_eye.xml')
lear_cascade = cv2.CascadeClassifier('haarcascade_mcs_leftear.xml')
rear_cascade = cv2.CascadeClassifier('haarcascade_mcs_rightear.xml')

#load a sample image and then greyscale it
img = cv2.imread('sample_img.jpg')
gray_img = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

#find each face in the given image
faces = face_cascade.detectMultiScale(grey, 1.3, 5)

#for each face with all desired classifiers, box all landmarks
for (x,y,w,h) in faces:
    cv2.rectangle(img,(x,y),(x+w,y+h),(255,0,0),2)
    roi_gray = gray[y:y+h, x:x+w]
    roi_color = img[y:y+h, x:x+w]
    eyes = eye_cascade.detectMultiScale(roi_gray)
    lear = lear_cascade.detectMultiScale(roi_gray)
    rear = rear_cascade.detectMultiScale(roi_gray)
    for (ex,ey,ew,eh) in eyes:
        cv2.rectangle(roi_color,(ex,ey),(ex+ew,ey+eh),(0,255,0),2)
    for (ex,ey,ew,eh) in lear:
        cv2.rectangle(roi_color,(ex,ey),(ex+ew,ey+eh),(0,255,0),2)
    for (ex,ey,ew,eh) in rear:
        cv2.rectangle(roi_color,(ex,ey),(ex+ew,ey+eh),(0,255,0),2)
